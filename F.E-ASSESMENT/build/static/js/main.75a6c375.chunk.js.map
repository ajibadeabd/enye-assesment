{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","profile","setprofile","nfilter","setnfilter","search","setSearch","page","setpage","currentpage","setcurrentpage","filterby","setfilterby","selectValue","setselectValue","useEffect","console","log","isNaN","axios","get","then","data","len","records","profiles","length","nop","nopa","toString","indexOf","first20","slice","catch","e","onSortChanged","target","value","className","type","onChange","filta","val","replace","trim","filter","each","toUpperCase","startsWith","checked","clicked","class","scope","map","index","FirstName","LastName","Gender","Latitude","Longitude","CreditCardNumber","CreditCardType","Email","DomainName","PhoneNumber","MacAddress","UserName","LastLogin","PaymentMethod","onClick","position","Slice","tabindex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75a6c375.chunk.js","sourcesContent":["import './App.css';\r\nimport axios from 'axios';\r\nimport React,{useEffect,useState} from 'react'\r\n\r\n\r\nconst  App=()=> {\r\n    const [profile,setprofile]=useState([])\r\n    const [nfilter,setnfilter]=useState([])\r\n    const [search,setSearch]=useState([])\r\n    const [page,setpage]=useState(0)\r\n    const [currentpage,setcurrentpage]=useState(1)\r\n    const [filterby,setfilterby]=useState([])\r\n    const [selectValue,setselectValue]=useState('FirstName')\r\n    \r\n        const fetchData=()=>{\r\n          axios.get('https://api.enye.tech/v1/challenge/records')\r\n          .then(({data})=>{\r\n        let len =data.records.profiles.length\r\n        \r\n        let nop=len/20\r\n        let nopa=len%20\r\n        if(nop.toString().indexOf('.')===-1){\r\n        \r\n          // page=nop\r\n          setpage(nop)\r\n          setcurrentpage(1)\r\n        }else{\r\n        setpage(nop-(nopa/20)  +1)\r\n        setcurrentpage(1)\r\n      \r\n      \r\n      }\r\n      setprofile(data.records.profiles)\r\n      \r\n      let first20= data.records.profiles.slice(0,20)\r\n        setnfilter(first20)\r\n        setfilterby(first20)\r\n      \r\n          })\r\n          .catch(e=>{\r\n          })\r\n        }\r\n        const prev=()=>{\r\n          if(currentpage===1){\r\n          }\r\n          else{\r\n            let position =(currentpage-2)*20\r\n            let Slice = profile.slice(position,(currentpage-1)*20)\r\n      \r\n        setcurrentpage(currentpage-1)\r\n        setnfilter(Slice)\r\n        setfilterby(Slice)\r\n      \r\n          }\r\n        }\r\n        const next=()=>{\r\n      if(currentpage===page){\r\n          }else{\r\n            let position =(currentpage)*20\r\n      let Slice = profile.slice(position,position+20)\r\n        setnfilter(Slice)\r\n        setfilterby(Slice)\r\n        setcurrentpage(currentpage+1)\r\n          }\r\n        }\r\n        const Search=(e)=>{\r\n      let val =e.target.value.replace(/\\s+/g, '').trim()\r\n      setSearch(val)\r\n      if(val===''){\r\n        setnfilter(filterby)\r\n      }else{\r\n          let filta;\r\n\r\n        if(!isNaN(selectValue)\r\n             ){\r\n\r\n           filta = filterby.filter((each)=>(\r\n            \r\n            each[selectValue].startsWith(val)\r\n         ))\r\n        }\r\n        \r\n        else{\r\n\r\n           filta = filterby.filter((each)=>(\r\n            \r\n            each[selectValue].toUpperCase().startsWith(val.toUpperCase())\r\n         ))\r\n        }\r\n\r\n         \r\n         setnfilter(filta)}\r\n        }\r\n        useEffect(() => {\r\n          console.log(isNaN('745-101-8632'))\r\n\r\n          fetchData()\r\n          return () => {\r\n            console.log(isNaN('745-101-8632'))\r\n            // cleanup\r\n          }\r\n        }, [])\r\n      \r\n\r\n\r\n        const onSortChanged=(e)=>{\r\n            setselectValue(e.target.value)\r\n          }\r\n\r\n\r\n    return (\r\n        <div className='main__body'>\r\n\r\n            <div className='user__data'>\r\n                <header className='user__manager'>User Manager</header>\r\n                <p className='user__info'>User info</p>\r\n                </div>\r\n                    <div className='second__section'>\r\n                <div className='search__sort1'>\r\n                    <input type='search'\r\n                     className='search' \r\n                    onChange={Search}\r\n                    value={search}\r\n                     type=\"search\"\r\n                      name=\"Search\"\r\n                    placeholder='search for a user'/>\r\n                        <p className=\"sort__by\">Filter by:</p>\r\n                    <div className='sort__user__with'>\r\n                        <div className='select'>\r\n                            <input value='FirstName' checked={false}\r\n                            onChange={onSortChanged}\r\n                           \r\n                            checked={selectValue==='FirstName'}\r\n                            className='radio'  type='radio'/> \r\n                            <label>FirstName</label> \r\n                            <br/></div>\r\n\r\n                            <div className='select'>\r\n                            <input value='LastName'\r\n                              onChange={onSortChanged}\r\n                              checked={selectValue==='LastName'}\r\n                            className='radio' clicked type='radio'/> \r\n                            <label>LastName</label> \r\n                            <br/></div>\r\n\r\n\r\n                            <div className='select'>\r\n                            <input value='Gender' \r\n                            onChange={onSortChanged}\r\n                            checked={selectValue==='Gender'}\r\n                            className='radio' clicked type='radio'/> \r\n                            <label>Gender</label> \r\n                            <br/></div>\r\n                          \r\n                            \r\n                            <div className='select'>\r\n                            <input value='CreditCardNumber' \r\n                            onChange={onSortChanged}\r\n                            checked={selectValue==='CreditCardNumber'}\r\n                            className='radio' clicked type='radio'/> \r\n                            <label>CreditCardNumber</label> \r\n                            <br/></div>\r\n                            <div className='select'>\r\n                            <input value='CreditCardType' \r\n                            onChange={onSortChanged}\r\n                            checked={selectValue==='CreditCardType'}\r\n                            className='radio' clicked type='radio'/> \r\n                            <label>CreditCardType</label> \r\n                            <br/></div>\r\n                            <div className='select'>\r\n                            <input value='Email' \r\n                            onChange={onSortChanged}\r\n                            checked={selectValue==='Email'}\r\n                            className='radio' clicked type='radio'/> \r\n                            <label>Email</label> \r\n                            <br/></div>\r\n                            <div className='select'>\r\n                            <input value='DomainName'\r\n                            onChange={onSortChanged}\r\n                            checked={selectValue==='DomainName'}\r\n                            className='radio' clicked type='radio'/> \r\n                            <label>DomainName</label> \r\n                            <br/></div>\r\n                            <div className='select'>\r\n                            <input value='PhoneNumber'\r\n                            onChange={onSortChanged}\r\n                            checked={selectValue==='PhoneNumber'}\r\n                            className='radio' clicked type='radio'/> \r\n                            <label>PhoneNumber</label> \r\n                            <br/></div>\r\n                            <div className='select'>\r\n                            <input value='MacAddress' \r\n                            onChange={onSortChanged}\r\n                            checked={selectValue==='MacAddress'}\r\n                            className='radio' clicked type='radio'/> \r\n                            <label>MacAddress</label> \r\n                            <br/></div>\r\n                            <div className='select'>\r\n                            <input value='UserName' \r\n                            onChange={onSortChanged}\r\n                            checked={selectValue==='UserName'}\r\n                            className='radio' clicked type='radio'/> \r\n                            <label>UserName</label> \r\n                            <br/></div>\r\n                            <div className='select'>\r\n                            <input value='LastLogin' \r\n                            onChange={onSortChanged}\r\n                            checked={selectValue==='LastLogin'}\r\n                            className='radio' clicked type='radio'/> \r\n                            <label>LastLogin</label> \r\n                            <br/></div>\r\n                            <div className='select'>\r\n                            <input value='PaymentMethod' \r\n                            onChange={onSortChanged}\r\n                            checked={selectValue==='PaymentMethod'}\r\n                            className='radio' clicked type='radio'/> \r\n                            <label>PaymentMethod</label> \r\n                            <br/></div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className='search__sort2'>\r\n\r\n\r\n                    \r\n<div className=\"table-responsive\">\r\n<table class=\"table\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">S/N</th>\r\n      <th scope=\"col\">FirstName</th>\r\n      <th scope=\"col\">LastName</th>\r\n      <th scope=\"col\">Gender</th>\r\n      <th scope=\"col\">Latitude</th>\r\n      <th scope=\"col\">Longitude</th>\r\n      <th scope=\"col\">CreditCardNumber</th>\r\n      <th scope=\"col\">CreditCardType</th>\r\n      <th scope=\"col\">Email</th>\r\n      <th scope=\"col\">DomainName</th>\r\n      <th scope=\"col\">PhoneNumber</th>\r\n      <th scope=\"col\">MacAddress</th>\r\n      <th scope=\"col\">UserName</th>\r\n      <th scope=\"col\">LastLogin</th>\r\n      <th scope=\"col\">PaymentMethod</th>\r\n     \r\n    </tr>\r\n    \r\n  </thead>\r\n  {nfilter.map((each,index)=>(\r\n  //  <li key={index}>{each.FirstName}</li>\r\n   <tbody>\r\n    <tr>\r\n      <th scope=\"row\">{index+1}</th>\r\n      <td>{each.FirstName}</td>\r\n      <td>{each.LastName}</td>\r\n      <td>{each.Gender}</td>\r\n      <td>{each.Latitude}</td>\r\n      <td>{each.Longitude}</td>\r\n      <td>{each.CreditCardNumber}</td>\r\n      <td>{each.CreditCardType}</td>\r\n      <td>{each.Email}</td>\r\n      <td>{each.DomainName}</td>\r\n      <td>{each.PhoneNumber}</td>\r\n      <td>{each.MacAddress}</td>\r\n      <td>{each.UserName}</td>\r\n      <td>{each.LastLogin}</td>\r\n      <td>{each.PaymentMethod}</td>\r\n    </tr>\r\n   \r\n  </tbody>\r\n\r\n))}\r\n  \r\n</table>\r\n</div>\r\n                </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n                <div className='paginationcon'>\r\n\r\n<button onClick={prev}  className=\"prev\" tabindex=\"-1\">Previous</button>\r\n<button className=\"next disabled\" onClick={next}>Next</button>\r\n</div>\r\n        </div>\r\n    )\r\n}\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import 'bootstrap/dist/js/bootstrap';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}